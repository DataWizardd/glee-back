name: Deploy to Ncloud

on:
  push:
    branches: [ main ]

jobs:
  docker_image_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Inject .env file
        run: echo "${{ secrets.BACKEND_ENV }}" > ./.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # ncloud 컨테이너 레지스트리 로그인 (Secrets에 설정된 값을 사용)
      - name: Login to Ncloud Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_URL }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.CONTAINER_REGISTRY_URL }}/dap-dap-back:latest
          cache-from: type=registry,ref=${{ secrets.CONTAINER_REGISTRY_URL }}/dap-dap-back:buildcache
          cache-to: type=registry,ref=${{ secrets.CONTAINER_REGISTRY_URL }}/dap-dap-back:buildcache,mode=max


  pull_deploy:
    name: Connect server via SSH and update container
    needs: docker_image_push  # 빌드 및 푸시 작업이 완료된 후 실행
    runs-on: ubuntu-latest
    steps:
      - name: Connect via SSH and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_PORT }}
          script: |

            # 도커 로그인
            docker login ${{ secrets.CONTAINER_REGISTRY_URL }} --username ${{ secrets.NCP_ACCESS_KEY }} --password ${{ secrets.NCP_SECRET_KEY }}

            # 새로운 이미지 Pull (태그명은 실제 사용한 태그로 변경)
            docker pull ${{ secrets.CONTAINER_REGISTRY_URL }}/dap-dap-back:latest

            # 기존 컨테이너 중 해당 애플리케이션만 종료하도록 container 이름이나 ID 지정 (예시로 'dap-dap-back' 사용)
            docker stop dap-dap-back || true
            docker rm dap-dap-back || true

            # 새로운 컨테이너 실행 (필요한 포트 매핑 및 컨테이너 이름 설정)
            docker run -d --name dap-dap-back -p 8000:8000 ${{ secrets.CONTAINER_REGISTRY_URL }}/dap-dap-back:latest

            # 사용하지 않는 이미지 정리
            docker image prune -f